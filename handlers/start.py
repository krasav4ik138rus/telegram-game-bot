from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup
from telegram.ext import ContextTypes, CommandHandler, CallbackQueryHandler
from keyboards.builder import KeyboardBuilder
from database.crud import UserCRUD  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º UserCRUD –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –Ω–∞—à–µ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    user_exists = await UserCRUD.get_user(user_id)

    if not user_exists:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –µ–º—É "–ù–∞—á–∞—Ç—å"
        # –≠—Ç–æ –±—É–¥–µ—Ç Inline-–∫–Ω–æ–ø–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –≤—ã–∑–æ–≤–µ—Ç handle_start_callback
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton("–ù–∞—á–∞—Ç—å", callback_data="start_command")]
        ])
        await update.message.reply_text(
            "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ù–∞–∂–º–∏—Ç–µ '–ù–∞—á–∞—Ç—å', —á—Ç–æ–±—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞ –∏ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.",
            reply_markup=keyboard
        )
    else:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
        await update.message.reply_text(
            "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=KeyboardBuilder.main_menu()
        )

    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (–∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º last_seen).
    # –≠—Ç–æ –≤–∞–∂–Ω–æ –¥–µ–ª–∞—Ç—å –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –¥–∞–∂–µ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—Å–∞–ª /start –±–µ–∑ –∫–Ω–æ–ø–∫–∏, –æ–Ω –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω.
    await UserCRUD.add_user(user_id)


# –ù–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è callback_data "start_command" –æ—Ç Inline-–∫–Ω–æ–ø–∫–∏
async def handle_start_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()  # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback, —á—Ç–æ–±—ã –∫–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ—Å—Ç–∞–ª–∞ "–∫—Ä—É—Ç–∏—Ç—å—Å—è"
    user_id = query.from_user.id

    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (–∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º last_seen)
    await UserCRUD.add_user(user_id)

    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å –∫–Ω–æ–ø–∫—É "–ù–∞—á–∞—Ç—å" –∏ –ø–æ–∫–∞–∑–∞—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
    await query.edit_message_text(
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=KeyboardBuilder.main_menu()
    )


def register_handlers(application):
    # CommandHandler –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä—è–º–æ–≥–æ –≤–≤–æ–¥–∞ /start
    application.add_handler(CommandHandler("start", start))
    # CallbackQueryHandler –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ Inline-–∫–Ω–æ–ø–∫—É "–ù–∞—á–∞—Ç—å"
    application.add_handler(CallbackQueryHandler(handle_start_callback, pattern="^start_command$"))